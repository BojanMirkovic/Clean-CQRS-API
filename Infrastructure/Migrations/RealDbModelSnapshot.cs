// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDb))]
    partial class RealDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AnimalModel.Animal", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnimalId");

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId");

                    b.ToTable("Animal");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.UserAnimalModel.UsersHaveAnimals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersHaveAnimals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AnimalId = new Guid("12345678-1234-5678-1234-567812345682"),
                            UserId = new Guid("08260479-52a0-4c0e-a588-274101a2c3be")
                        },
                        new
                        {
                            Id = -2,
                            AnimalId = new Guid("12345680-1224-5878-1234-667812345690"),
                            UserId = new Guid("08260479-52a0-4c0e-a588-274101a2c3be")
                        },
                        new
                        {
                            Id = -3,
                            AnimalId = new Guid("12345678-1234-5678-1234-567812345682"),
                            UserId = new Guid("047425eb-15a5-4310-9d25-e281ab036868")
                        },
                        new
                        {
                            Id = -4,
                            AnimalId = new Guid("12345680-1224-5878-1234-667812345690"),
                            UserId = new Guid("047425eb-15a5-4310-9d25-e281ab036868")
                        });
                });

            modelBuilder.Entity("Domain.Models.UserModel.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("AnimalId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("08260479-52a0-4c0e-a588-274101a2c3be"),
                            Password = "$2a$11$jj292GecTuOwiDYy9vTUC.S1IkY/kvDF2K9XZlIKiYT9eiYyaJDfO",
                            Role = "admin",
                            Username = "Bojan"
                        },
                        new
                        {
                            UserId = new Guid("047425eb-15a5-4310-9d25-e281ab036868"),
                            Password = "$2a$11$z3SI1lzAN1hybO21WC1aqevBj4G99rC8EDbjLKXnO82tbHIQeCg2u",
                            Role = "user",
                            Username = "NotAnAdmin"
                        },
                        new
                        {
                            UserId = new Guid("047425eb-15a5-4310-9d25-e281ab036869"),
                            Password = "$2a$11$iWdG8Ngglhy5Br7F8g9zIejQOVV4xv0koIOZ90gHtE70OURzZvFOG",
                            Role = "user",
                            Username = "TestUser"
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.AnimalModel.Animal");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Birds", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("60dcdf09-7955-4954-bbc5-d2ce66b625c2"),
                            AnimalType = "",
                            Name = "Ara",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            AnimalId = new Guid("753f500f-1970-4d75-b29e-ac83f148c55b"),
                            AnimalType = "",
                            Name = "Vrana",
                            CanFly = true,
                            Color = "Black"
                        },
                        new
                        {
                            AnimalId = new Guid("e7bdcf6f-7481-4112-9266-84eb1242f45d"),
                            AnimalType = "",
                            Name = "Sova",
                            CanFly = true,
                            Color = "Grey"
                        },
                        new
                        {
                            AnimalId = new Guid("12345678-1234-5678-1234-567812345682"),
                            AnimalType = "",
                            Name = "TestBirdForUnitTestBird1",
                            CanFly = false,
                            Color = "blue"
                        },
                        new
                        {
                            AnimalId = new Guid("12345680-1224-5878-1234-667812345690"),
                            AnimalType = "",
                            Name = "TestBirdForUnitTestBird2",
                            CanFly = false,
                            Color = "blue"
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.AnimalModel.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("Cats", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("132379ea-8748-4273-a6aa-b1002dbd80ca"),
                            AnimalType = "",
                            Name = "Kity",
                            Breed = "Persian Cat",
                            LikesToPlay = true,
                            Weight = 4
                        },
                        new
                        {
                            AnimalId = new Guid("056bae45-79b7-4c2f-9e6b-26d3f543565b"),
                            AnimalType = "",
                            Name = "Micko",
                            Breed = "Domestic Cat",
                            LikesToPlay = true,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("490da8d5-3730-4906-8166-706bcd1a49f9"),
                            AnimalType = "",
                            Name = "Azrael",
                            Breed = "Siamese Cat",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            AnimalId = new Guid("12345678-1234-5678-1234-567812345680"),
                            AnimalType = "",
                            Name = "TestCatForUnitTests",
                            Breed = "Domestic Cat",
                            LikesToPlay = false,
                            Weight = 6
                        });
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.AnimalModel.Animal");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("Dogs", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("ad6842f9-9935-4c6d-b177-f66d589260a0"),
                            AnimalType = "",
                            Name = "Astor",
                            Breed = "English Pointer",
                            Weight = 28
                        },
                        new
                        {
                            AnimalId = new Guid("032f97dc-f536-4bf5-99f6-3160f4f3a4d9"),
                            AnimalType = "",
                            Name = "Ari",
                            Breed = "English Pointer",
                            Weight = 31
                        },
                        new
                        {
                            AnimalId = new Guid("7197e6de-c10f-46c2-a7b6-ed7c6d3091d2"),
                            AnimalType = "",
                            Name = "Max",
                            Breed = "German Shepherd",
                            Weight = 37
                        },
                        new
                        {
                            AnimalId = new Guid("12345678-1234-5678-1234-567812345678"),
                            AnimalType = "",
                            Name = "TestDogForUnitTests",
                            Breed = "German Terrire",
                            Weight = 9
                        });
                });

            modelBuilder.Entity("Domain.Models.UserModel.User", b =>
                {
                    b.HasOne("Domain.Models.AnimalModel.Animal", null)
                        .WithMany("Users")
                        .HasForeignKey("AnimalId");
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Bird", b =>
                {
                    b.HasOne("Domain.Models.AnimalModel.Animal", null)
                        .WithOne()
                        .HasForeignKey("Domain.Models.AnimalModel.Bird", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Cat", b =>
                {
                    b.HasOne("Domain.Models.AnimalModel.Animal", null)
                        .WithOne()
                        .HasForeignKey("Domain.Models.AnimalModel.Cat", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Dog", b =>
                {
                    b.HasOne("Domain.Models.AnimalModel.Animal", null)
                        .WithOne()
                        .HasForeignKey("Domain.Models.AnimalModel.Dog", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.AnimalModel.Animal", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
